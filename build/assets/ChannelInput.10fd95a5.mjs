import{ref as h,watch as _,onMounted as v,unref as r,mergeProps as C,isRef as x,useSSRContext as R}from"vue";import{ssrRenderComponent as S}from"vue/server-renderer";import g from"vue-multiselect";import{u as I}from"./editor.79190857.mjs";import{storeToRefs as V}from"pinia";/* empty css                                                                  */const a={__name:"ChannelInput",__ssrInlineRender:!0,setup(s){const o=h([]),n=I(),{channels:u,selectedChannels:e}=V(n);_(()=>e.value,()=>{u.value.length=0,e.value.forEach(c)});function c(t){u.value.push(t.id)}v(()=>{m()});function m(){axios.get("/api/channels").then(t=>{o.value=t.data})}return(t,p,i,d)=>{p(S(r(g),C({modelValue:r(e),"onUpdate:modelValue":f=>x(e)?e.value=f:null,options:o.value,multiple:!0,"close-on-select":!0,placeholder:"Choose Some channels",label:"name","track-by":"id",max:3},d),null,i))}}},l=a.setup;a.setup=(s,o)=>{const n=R();return(n.modules||(n.modules=new Set)).add("resources/js/components/ChannelInput.vue"),l?l(s,o):void 0};export{a as default};
